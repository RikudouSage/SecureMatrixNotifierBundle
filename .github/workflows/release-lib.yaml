name: Compile Golang bridge
on:
  push:
    branches:
      - master
  pull_request: {}
  workflow_dispatch: {}

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      golang: ${{ steps.filter.outputs.golang }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            golang:
              - 'lib/**'

  compile:
    needs: changes
    if: needs.changes.outputs.golang == 'true' || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
        include:
          - os: ubuntu-latest
            job: build-linux-x64
            name: x86_64
            filePart: x86
          - os: ubuntu-24.04-arm
            job: build-linux-aarch64
            name: arm64
            filePart: arm
    name: Compile (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install libolm
        run: sudo apt-get update && sudo apt-get -y install libolm-dev
      - name: Build
        run: |
          cd lib
          make ${{ matrix.job }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: lib/out/libmatrix.linux.${{ matrix.filePart }}.64.so
          retention-days: 1
